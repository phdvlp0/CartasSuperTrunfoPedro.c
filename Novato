#include <stdio.h>
#include <string.h>

int main() {


char estado1, estado2;
char cidade1, cidade2;
int populacao1, populacao2;
float area1, area2;
float pib1, pib2;
int pontosTuristicos1, pontosTuristicos2;

//Area para criaçao das cartas

//Primeira carta

printf("Carta 1\n");

printf("Digite a cidade desejada: ")
scanf ("%s", cidade1);

printf("População: ");
scanf "%d", &populacao1);

printf("Area: ");
scanf ("%f", &area1);

printf("PIB: ");
scanf("%f", &pib1);

printf("Pontos Turisticos: ";
scanf("%d", &pontosTuristicos1);

printf("Estado: ");
scanf("%s", &estado1);

//Segunda Carta
printf("\nCarta 2:\n");

printf("Digite a cidade desejada: ");
scanf("%s", cidade2);

printf("População: ");
scanf("%d", &populacao2);

printf("Área: ");
scanf("%f", &area2);

printf("PIB: ");
scanf("%f", &pib2);

printf("Pontos Turisticos: ");
scanf("%d", &pontosTuristicos2);


//Area para exibir as cartas

printf("\n--- Carta 1 --- \n");
printf("Estado: %s\nCidade:%s\nPopulação: %d\nÁrea: %.2f\nPIB: %2f\nPontos Turisticos: %d\n",
estado1, cidade1, populacao1, area1, pib1, pontosTuristicos1);

printf("\n--- Carta 2 ---\n");
printf("Estado: %s\nCidade: %s\nPopulação: %d\nÁrea: %.2f\nPIB: %2f\nPontos Turisticos: %d\n", 
estado2, cidade2, populacao2, area2, pib2, pontosTuristicos2);

}

// Logica Super Trunfo Novato

#include <stdio.h>

// Area para representar uma carta do jogo
struct Carta {
char estado [3];
char codigoCarta[10];
char nomeCidade[50];
int populacao;
int pontosTuristicos;
float densidadePopulacional;
float pibPerCapita;
};

int main() {
// Criação de duas cartas com dados pré definidos
struct Carta carta1 = {
"SP", "C001", "São Paulo",
12300000, 1521.0, 750.0, 50

};

struct Carta carta2 = {
"RJ", "C002", "Rio de Janeiro",
6000000, 1200.0, 380.0, 40

};

// Area para calcular a densidade e o PIB per capita
carta1.densidadePopulacional = carta1.populacao / carta1.area;
carta2.densidadePopulacional = carta2.populacao / carta2.area;

carta1.pibPerCapita = carta1.pib / carta1.populacao;
carta2.pibPerCapita = carta2.pib / carta2.populacao;

// Comparação baseada em 1 atributo (População)
printf("Comparação de cartas (Atributo: População):\n\n");

printf("Carta 1 - %s (%s): %d habitantes\n", carta1.nomeCidade, carta1.estado, carta1.populacao);
printf("Carta 2 - %s (%s): %d habitantes\n", carta2.nomeCidade, carta2.estado, carta2.populacao);

if (carta1.populacao > carta2.populacao) {
  printf("\nResultado: Carta 1 (%s) venceu!\n", carta1.nomeCidade);
} else if (carta2.populacao > carta1.populacao) {
printf("\nResultado: Carta 2 (%s) venceu!\n", carta2.nomeCidade);
} else {
printf("\nResultado: Empate!\n");
}

}

int escolha;

// Menu interativo logica nivel aventureiro
printf("Escolha o atributo para comparar:\n");
printf("1 - População\n");
printf("2 - Área\n");
printf("3 - PIB\n");
printf("4 - Pontos Turisticos\n");
printf("5 - Densidade Populacional\n");
printf("Digite a opção (1 a 5): ");
scanf("%d", &escolha);

printf("\nComparando:\n");
printf("Carta 1: %s (%s)\n", carta1.nomeCidade, carta1.estado);
printf("Carta 2: %s (%s)\n", carta2.nomeCidade, carta2.estado);

switch (escolha) {
   case 1:
printf("\nPopulação:\n");
printf("%s: %d habitantes\n", carta1.nomeCidade, carta1.populacao);
printf("%s: %d habitantes\n", carta2.nomeCidade, carta2.populacao);

if (carta1.populacao > carta2.populacao) {
 printf("\nResultado: %s venceu!\n, carta1.nomeCidade);
} else if (carta2.populacao > carta1.populacao) {
  printf("\nResultado: %s venceu!\n", carta2.nomeCidade);
} else {
  printf("\nResultado: Empate!\n");
}
break;

case 2:
printf("\nÁrea:\n");
printf("%s: %.2f km²\n", carta1.nomeCidade, carta1.area);
printf("%s: %.2f km²\n", carta2.nomeCidade, carta2.area

if (carta1.area > carta2.area) {
  printf("\nResultado: %s venceu!\n", carta1.nomeCidade);
} else if (carta2.area > carta1.area) {
  printf("\nResultado: %s venceu!\n", carta2.nomeCidade);
} else {
  printf("\nResultado: Empate!\n);
}
break;

case 3: printf("\nPIB:\n");
printf("%s: R$ %.2f bilhões\n, carta1.nomeCidade, carta1.pib);
printf("%s: R$ %.2f bilhões\n, carta2.nomeCidade, carta2.pib);

if (carta1.pib > carta2.pib) {
  printf("\nResultado: %s venceu!\n",carta1.nomeCidade)";
} else if (carta2.pib > carta1.pib) {
  printf("\nResultado: %s venceu!\n", carta2.nomeCidade);
} else { 
  printf("\nResultado: Empate!\n");
}
break;

case 4:
  printf("\nPontos Turisticos:\n");
  printf("%s: %d pontos\n", carta1.nomeCidade, carta1.pontosTuristicos);

if (carta1.pontosTuristicos > carta2.pontosTuristicos) { 
  printf("\nResultado: %s venceu"\n", carta1.nomeCidade);
} else if (carta2.pontosTuristicos > carta1.pontosTuristicos)
  printf("\nResultado: %s venceu!\n", carta2.nomeCidade);
} else { 
  printf("\nResultado: Empate!\n");

}
break;

case 5: 
printf("\nDensidade Populacional:\n");
printf("%s: %.2f hab/km²\n", carta1.nomeCidade, carta1.densidadePopulacional);
printf("%s: %.2f hab/km²\n", carta2.nomeCidade, carta2.densidadePopulacional);

if (carta1.densidadePopulacional < carta2.densidadePopulacional) {
  printf("\nResultado: %s venceu (menor densidade)!\n", carta1.nomeCidade);
} else if (carta2.densidadePopulacional < carta1.densidadePopulacional) {
  printf("\nResultado: %s venceu (menor densidade)!\n", carta2.nomeCidade);
} else { 
  printf("\nResultado: Empate!\n");
}
break;

default:
  printf("\nOpção inválida! Tente novamente com uma opção de 1 a 5.\n")
}

// Desafio logica nivel mestre

#include <stdio.h>
#include <string.h>

// Definição de estrutura da carta
struct Carta {
char nomeCidade[50];
int populacao;
float area;
float pib;
int pontosTuristicos;
float densidade;
};

// Função que retorna o valor de um atributo da carta com base na escolha 
float getAtributo(struct Carta c, int escolha) {
  switch (escolha) {
     case 1: return c.populacao;
     case 2: return c.area;
     case 3: return c.pib;
     case 4: return c.pontosTuristicos;
     case 5: return c.densidade;
     default: return 0;
  }
}

// Função que retorna o nome de um atributo baseado no numeroe escolhido
char* nomeAtributo(int escolha) {
   switch (escolha) {
   case 1: return "População";
   case 2: return "Área";
   case 3: return "PIB";
   case 4: return "Pontos Turisticos";
   case 5: return "Densidade";
   default: return "Desconhecido";
  }
}

int main() {
 // Criação das cartas
struct Carta carta1 = {"São Paulo", 1230000, 1521.0, 750.0, 50, 0};
struct Carta carta2 = {"Rio de Janeiro", 6000000, 1200.0, 380.0, 45, 0};

// Calculo densidade populacional
carta1.densidade = carta1.populacao / carta1.area;
carta2.densidade = carta2.populacao / carta2.area;

int a1, a2;
float v1_1, V2_1, v1_2, v2_2;

// Entrada para escolha dos atributos
printf("Escolha o primeiro atributo:\n1-População\n2-Área\n3-PIB\n4-Pontos Turisticos\n5-Densidade\n> ");
scanf("%d", &a1);

printf("Escolha o segundo atributo diferente do primeiro):\n");
for (int i = 1; i <= 5; i++) { 
  if (i != a1) printf("%d - %s\n", i, nomeAtributo(i));
}
printf("> ");
scanf ("%d", &a2);

// Validação das escolhas
if (a1 == a2 || a1 < 1 || a1 > 5 || a2 < 1 || a2 > 5) {
   printf("Atributos inválidos ou repetidos!\n");
return 1;

}

// Coleta dos valores dos atributos selecionados
v1_1 = getAtributo(carta1, a1);
v2_1 = getAtributo(carta2, a1);
v1_2 = getAtributo(carta1, a2);
v2_2 = getAtributo(carta2, a2);

// Exibição de valores das cartas
printf("\n%s:\n %s: %.2f\n %s: %.2f\n", carta1.nomeCidade, nomeAtributo(a1), v1_1, nomeAtributo(a2), v1_2);
printf("\n%s:\n %s: %.2f\n %s: %.2f\n", carta2.nomeCidade, nomeAtributo(a1), v2_1, nomeAtributo(a2), v2_2);

int pontos1 = 0, pontos2 = 0;

// Comparando: menor densidade é melhor, outros atributos: maior é melhor
pontos1 += (a1 == 5) ? (v1_1 < v2_1) : (v1_1 > v2_1);
pontos2 += (a1 == 5) ? (v2_1 < v1_1) : (v2_1 > v1_1);
pontos1 += (a2 == 5) ? (v1_2 < v2_2) : (v1_2 > v2_2);
pontos2 += (a2 == 5) ? (v2_2 < v1_2) : (v2_2 > v1_2);

// Soma total dos atributos escolhidos
float soma1 = v1_1 + v1_2;
float soma2 = v2_1 + v2_2;

// Exibição da soma
printf("\nSoma dos atributos:\n%s: %.2f\n%s: %.2f\n", carta1.nomeCidade, soma1, carta2.nomeCidade, soma2);

// Resultado final 
printf("\nResultado: ");
if (soma1 > soma2)
  printf("%s venceu!\n", carta1.nomeCidade);
else if (soma2 > soma1)
  printf("%s venceu!\n", carta2.nomeCidade);
else
printf("Empate!\n");

return 0;
} 















